---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    url: ${GIT_REPO_URL}
    token: ${GIT_REPO_TOKEN}
  triggers:
  - type: commit
  properties:
  - name: DRA_SERVER
    value: https://dra.stage1.mybluemix.net
    type: text
  jobs:
  - name: Build
    type: builder
  - name: Unit Test
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_mocha_test
    target:
      region_id: ${DEV_REGION_ID}
      organization: ${DEV_ORG_NAME}
      space: ${DEV_SPACE_NAME}
    MINIMUM_SUCCESS_RATE: '100'
    TEST_LOG_FILE: tests/server/mochatest.json
    MINIMUM_COVERAGE_RATE: '50'
    ADVISORY_MODE: 'false'
    COVERAGE_TOOL_SELECT: istanbul
    COVERAGE_REGRESSION_THRESHOLD: '2'
    CHECK_TEST_REGRESSION: 'true'
    COVERAGE_LOG_FILE: tests/server/coverage/reports/coverage-summary.json
    COMMAND: |
      #!/bin/bash
      npm install
      grunt dev-test-cov -f
    CHECK_COVERAGE_REGRESSION: 'true'
    TEST_TOOL_SELECT: mocha
- name: DEV
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  - name: DRA_SERVER
    value: https://dra.stage1.mybluemix.net
    type: text
  jobs:
  - name: Set App name
    type: deployer
    target:
      region_id: ${DEV_REGION_ID}
      organization: ${DEV_ORG_NAME}
      space: ${DEV_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |-
      #!/bin/bash
      export CF_APP_NAME="$CF_APP-dev"
  - name: Pre Deploy
    type: deployer
    extension_id: ibm.devops.services.pipeline.dra_deploy_extn
    target:
      region_id: ${DEV_REGION_ID}
      organization: ${DEV_ORG_NAME}
      space: ${DEV_SPACE_NAME}
      application: ${CF_APP_NAME}
    ENABLE_COMPARE_APPS: 'false'
    DRA_MODE: 'false'
    APPLICATION_NAME: ${CF_APP_NAME}
    APP_DESTINATION: Alpha
    ENABLE_BOUND_SERVICE: 'true'
    APP_NOTDESTINATION: Test
    COMMAND: '#!/bin/bash'
  - name: Deploy to Dev
    type: deployer
    target:
      region_id: ${DEV_REGION_ID}
      organization: ${DEV_ORG_NAME}
      space: ${DEV_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared myMicroservicesCloudant
      # Publish catalogAPI
      if ! cf service catalogAPI > /dev/null; then
      cf cups catalogAPI
      fi
      # Push app
      cf push "${CF_APP_NAME}"
      # Update catalogAPI
      HOST=http://$(cf app $CF_APP_NAME | grep urls: | awk '{print $2}')
      export APP_URL=$HOST
      cf uups catalogAPI -p '{"host":"'$HOST'"}'
      # View logs
      #cf logs "${CF_APP_NAME}" --recent
  - name: Functional Test
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_mocha_fvt
    target:
      region_id: ${QA_REGION_ID}
      organization: ${DEV_ORG_NAME}
      space: ${DEV_SPACE_NAME}
      application: ${CF_APP_NAME}
    MINIMUM_SUCCESS_RATE: '100'
    TEST_LOG_FILE: tests/fvt/mochafvttest.json
    ADVISORY_MODE: 'false'
    CHECK_TEST_REGRESSION: 'true'
    COMMAND: |-
      #!/bin/bash
      export CATALOG_API_TEST_SERVER=$APP_URL
      npm install
      grunt dev-fvt -f
    TEST_TOOL_SELECT: mocha
- name: TEST
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  - name: DRA_SERVER
    value: https://dra.stage1.mybluemix.net
    type: text
  jobs:
  - name: Set App name
    type: deployer
    target:
      region_id: ${QA_REGION_ID}
      organization: ${QA_ORG_NAME}
      space: ${QA_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |-
      #!/bin/bash
      export CF_APP_NAME="$CF_APP-test"
  - name: Pre Deploy
    type: deployer
    extension_id: ibm.devops.services.pipeline.dra_deploy_extn
    target:
      region_id: ${QA_REGION_ID}
      organization: ${QA_ORG_NAME}
      space: ${QA_SPACE_NAME}
      application: ${CF_APP_NAME}
    ENABLE_COMPARE_APPS: 'true'
    DRA_MODE: 'false'
    APPLICATION_NAME: ${CF_APP_NAME}
    APP_DESTINATION: Test
    ENABLE_BOUND_SERVICE: 'true'
    APP_NOTDESTINATION: Alpha
    COMMAND: '#!/bin/bash'
  - name: Deploy to Test
    type: deployer
    target:
      region_id: ${QA_REGION_ID}
      organization: ${QA_ORG_NAME}
      space: ${QA_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared myMicroservicesCloudant
      # Publish catalogAPI
      if ! cf service catalogAPI > /dev/null; then
      cf cups catalogAPI
      fi
      # Push app
      cf push "${CF_APP_NAME}"
      # Update catalogAPI
      HOST=http://$(cf app $CF_APP_NAME | grep urls: | awk '{print $2}')
      cf uups catalogAPI -p '{"host":"'$HOST'"}'
      # View logs
      #cf logs "${CF_APP_NAME}" --recent
- name: PROD
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  - name: ROUTE_DOMAIN
    value: stage1.mybluemix.net
    type: text
  - name: GROUP_SIZE
    value: '3'
    type: text
  - name: TARGET_PLATFORM
    value: CloudFoundry
    type: text
  - name: TEST_RESULT_FOR_AD
    value: ''
    type: text
  - name: DRA_SERVER
    value: https://dra.stage1.mybluemix.net
    type: text
  jobs:
  - name: Set App name
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |-
      #!/bin/bash
      export CF_APP_NAME="${CF_APP}_${BUILD_NUMBER}"
  - name: Pre Deploy
    type: deployer
    extension_id: ibm.devops.services.pipeline.dra_deploy_extn
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    ENABLE_COMPARE_APPS: 'true'
    DRA_MODE: 'false'
    APPLICATION_NAME: ${CF_APP_NAME}
    APP_DESTINATION: Prod
    ENABLE_BOUND_SERVICE: 'true'
    APP_NOTDESTINATION: Test
    COMMAND: '#!/bin/bash'
  - name: Deploy Single Instance
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |-
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared myMicroservicesCloudant
      # Publish catalogAPI
      if ! cf service catalogAPI > /dev/null; then
      cf cups catalogAPI
      fi
      cf push "${CF_APP_NAME}" --no-route -i 1
  - name: Begin AD
    type: deployer
    extension_id: ibm.devops.services.pipeline.devops.ad_start
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    RAMPDOWN_DURATION: 1m
    RAMPUP_DURATION: 1m
    COMMAND: |-
      #!/bin/bash
      source ${EXT_DIR}/git_util.sh
      git_retry clone https://github.com/Osthanes/update_service.git activedeploy
      activedeploy/activedeploy_step_1.sh
      # Update catalogAPI
      HOST=http://$(cf app $CF_APP_NAME | grep urls: | awk '{print $2}')
      cf uups catalogAPI -p '{"host":"'$HOST'"}'
  - name: Complete AD
    type: deployer
    extension_id: ibm.devops.services.pipeline.devops.ad_finish
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    COMMAND: |-
      #!/bin/bash
      source ${EXT_DIR}/git_util.sh
      git_retry clone https://github.com/Osthanes/update_service.git activedeploy
      activedeploy/activedeploy_step_2.sh
